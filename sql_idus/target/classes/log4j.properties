# 注释
#1. 配置log4j的根 日志级别 debug<info<warn<error 日志级别越高 输出的内容会越少
log4j.rootLogger = debug,console

#2. 配置log4j日志输出的位置
## log4j.appender.appenderName(自定义的名字) = 输出位置的完整类名（Appender类型）
##2.1 输出到控制台
log4j.appender.console = org.apache.log4j.ConsoleAppender

# 2.2 输出到文件中 - 每天生成一个日志文件
log4j.appender.dailyFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyFile.file = D:/logs/shopping/shopping.log

# 2.3 输出到文件中 - 按照日志大小分配文件
log4j.appender.file = org.apache.log4j.RollingFileAppender
log4j.appender.file.file = D:/logs/shopping/shop.log
log4j.appender.file.maxFileSize = 100
log4j.appender.file.maxBackupIndex = 100


##3.设置日志输出的格式
## log4j.appender.appenderName.layout = fully.qualified.name.of.layout.class (Layout类型)
## 3.1 设置简单格式输出
# log4j.appender.console.layout = org.apache.log4j.SimpleLayout
# 3.2 设置自定义格式化输出
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.conversionPattern = %d [%p] [%c] [%t] %m %n

log4j.appender.dailyFile.layout = org.apache.log4j.PatternLayout
log4j.appender.dailyFile.layout.conversionPattern = %d [%p] [%c] [%t] %m %n

log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.conversionPattern = %d [%p] [%c] [%t] %m %n