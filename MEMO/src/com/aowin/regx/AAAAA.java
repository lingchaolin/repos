package com.aowin.regx;

public class AAAAA {
/**
 * [\u4e00-\u9fa5]匹配中文字符
对于特殊字符*+?\.等，要使用字符本身使用转义字符；
 标准字符集合--注意大小写，大写是相反的意思
		\d 		0-9任意一个数字
		\w		任意一个字母或数字或下划线，A-Z,z-z,0-9,_
		\s		空格符、制表符、换行符--（都是空白的，不可见的）
		.		任意一个字符(除了\n)	--除换行符以外的任意字符
		[\s\S]	匹配任意字符
		
	自定义字符集合
		[ab5@]	匹配[]中任意一个字符即可
		[^abc]	除abc外的所有字符
		[f-k]	范围内的任意字符；
		[^A-F0-3]	A到F，0到3范围以外的任意字符
		除'^'和'-'外的符号被[]包围后失去特殊意义
		标准字符集合，除小数点外，被包含于中括号中，自定义字符集将包含该集合。
	量词-
		{n}表达式重复n次
		{m,n}表达式至少重复m次，最多重复n次；
		{m,}最少m次
	贪婪模式和非贪婪模式
		贪婪模式 	\d{3,7}		优先匹配满足最对次数的
			--{
					\d{2,5}  匹配123456  ---由于贪婪模式，匹配前五个，导致最后一个没有匹配
					而不会出现2个2个或3个3个的匹配
				}
		非贪婪模式	\d{3,7}?
		
		？匹配表达式0次或一次出现
		+ 至少出现一次
		* 表达式不出现或出现任意次；
		
	字符边界--零宽--符合某种条件的位置
		^	与字符串开始的地方匹配--\A:整个文本当成一个字符串的情况下
		$	与字符串结束的地方匹配--\Z:整个文本当成一个字符串的情况下
		\b	匹配一个单词边界--前面的字符和后面的字符不全是\w;
	{
		reg="^1\\d+4$";//匹配数字-多个
		str="123124";
	}
	|--或，匹配左边或右边
	()--捕获组--重复匹配到的字符；
	(?：Expression)
	
	预搜索（零宽断言）
		（？=exp)
		（？<=exp)
		（？!exp)
		（？<!exp)
		*/
	public static void main(String[] args) {

	}

}
