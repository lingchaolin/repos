package com.aowin.stuff.view;

import java.awt.*;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Vector;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.xml.soap.SOAPConnection;

import com.aowin.stuff.dao.PersonDao;
import com.aowin.stuff.data.ListUtil;
import com.aowin.stuff.lisnter.AdminListener;
import com.aowin.stuff.lisnter.HomeListener;
import com.aowin.stuff.lisnter.mouseListener;
import com.aowin.stuff.model.Person;
import com.aowin.stuff.server.MyClient;

public class HomePage  {
	/**
	 *
	 */
	private SubFrame sub;
	private JFrame frame;
	private JMenuBar bar;
	private JLabel label;
	private DefaultTableModel model;
	private JTable table;
	private String mode;
	private CardLayout cl;
	private JPanel pan;
	private JTextField txt;
	private JTextArea ta;
	private Socket client;

	public   HomePage(String mode) {
		this.mode = mode;
		frame = new JFrame();
		frame.setTitle("人事管理系统");
		frame.setSize(700, 600);
		frame.setLocation(300, 200);
//		设置容器
		Container container = frame.getContentPane();
		container.setLayout(new BorderLayout());

		JPanel con = new JPanel();
		con.setLayout(new BorderLayout());
		container.add(BorderLayout.CENTER, con);
//		**********************************
		bar = new JMenuBar();
		JMenu fileMenu = new JMenu("File");
		JMenu helpMenu = new JMenu("Help");

		frame.setJMenuBar(bar);
		bar.add(fileMenu);
		bar.add(helpMenu);
//		bar.setHelpMenu(helpMenu);
//		菜单项目
		JMenuItem add = new JMenuItem("增加");
		JMenuItem delete = new JMenuItem("删除");
		JMenuItem inquire = new JMenuItem("查询");
		JMenuItem save = new JMenuItem("保存");

		JMenuItem exit = new JMenuItem("退出");
		JMenuItem importing = new JMenuItem("导入");
		JMenuItem outporting = new JMenuItem("导出");
//		添加快捷键
//		add.setAccelerator(KeyStroke.getKeyStroke('N', java.awt.Event.CTRL_MASK, true));

		add.addActionListener(new HomeListener(this));
		delete.addActionListener(new HomeListener(this));
		inquire.addActionListener(new HomeListener(this));
		save.addActionListener(new HomeListener(this));

		exit.addActionListener(new HomeListener(this));
		importing.addActionListener(new HomeListener(this));
		outporting.addActionListener(new HomeListener(this));

		fileMenu.add(add);
		fileMenu.add(delete);
		fileMenu.add(inquire);
		fileMenu.add(save);
		fileMenu.addSeparator();
		fileMenu.add(exit);
		fileMenu.add(importing);
		fileMenu.add(outporting);
//		添加标题--设置字体
		label = new JLabel("人事管理系统");
		Font f = new Font("宋体", Font.PLAIN, 30);
		label.setFont(f);
		JPanel labelPanel = new JPanel();
		labelPanel.add(label);
		container.add(BorderLayout.NORTH, labelPanel);
//		添加表格
		String arr[] = {"编号", "名字", "性别", "部门", "工资"};
		model = new DefaultTableModel(arr, 0);
		table = new JTable(model);
		JScrollPane jspane = new JScrollPane(table);
		jspane.setPreferredSize(new Dimension(580, 440));
		JPanel tablePanel = new JPanel(new BorderLayout());
		tablePanel.add(BorderLayout.CENTER,jspane);
//		con.add(tablePanel);

		JTableHeader header = table.getTableHeader();
		header.addMouseListener(new mouseListener(this));
//		添加按钮
		JButton[] buttons = new JButton[5];
		buttons[0] = new JButton("添加");
		buttons[1] = new JButton("删除");
		buttons[2] = new JButton("修改");
		buttons[3] = new JButton("更新");
		buttons[4] = new JButton("查询");


//		按钮添加监听器
		buttons[0].addActionListener(new HomeListener(this));
		buttons[1].addActionListener(new HomeListener(this));
		buttons[2].addActionListener(new HomeListener(this));
		buttons[3].addActionListener(new HomeListener(this));
		buttons[4].addActionListener(new HomeListener(this));
		JPanel panel = new JPanel();
		panel.add(buttons[0]);
		panel.add(buttons[1]);
		panel.add(buttons[2]);
		panel.add(buttons[3]);
		panel.add(buttons[4]);
		tablePanel.add(BorderLayout.SOUTH, panel);

		pan=new JPanel();
		cl=new CardLayout();
		pan.setLayout(cl);
		pan.add("First card",tablePanel);
		if("admin".equals(mode)){
			JPanel panelL = new JPanel();
			JLabel labelL = new JLabel("你好，admin");
			JButton buttonL1 = new JButton("员工管理");
			JButton buttonL2 = new JButton("部门管理");
			JButton buttonL3 = new JButton("问题讨论");
			container.add(BorderLayout.WEST, panelL);
			panelL.setLayout(new GridLayout(9, 1, 10, 10));

			buttonL1.addActionListener(new AdminListener(this));
			buttonL2.addActionListener(new AdminListener(this));
			buttonL3.addActionListener(new AdminListener(this));
			panelL.add(labelL);
			panelL.add(buttonL1);
			panelL.add(buttonL2);
			panelL.add(buttonL3);

			buttons[0].setVisible(true);
			buttons[1].setVisible(true);
			buttons[2].setVisible(true);

			add.setVisible(true);
			delete.setVisible(true);
			save.setVisible(true);

			JPanel jpL2=new JPanel();
			jpL2.add(new Button("test"));
			pan.add("Second card",jpL2);

			 ta=new JTextArea(10,10);
			JScrollPane jsp=new JScrollPane(ta);
			JPanel jpL3=new JPanel(new BorderLayout());
			jpL3.add(BorderLayout.CENTER,jsp);
			 txt=new JTextField(46);
			JButton button =new JButton("发送");

			button.addActionListener(new AdminListener(this));

			JPanel panelTxt=new JPanel(new BorderLayout());
			panelTxt.add(BorderLayout.CENTER,txt);
			panelTxt.add(BorderLayout.EAST,button);
			jpL3.add(BorderLayout.SOUTH,panelTxt);
			pan.add("Third card",jpL3);

			pan.add(con);
			container.add(BorderLayout.CENTER, pan);

		}else{
			buttons[0].setVisible(false);
			buttons[1].setVisible(false);
			buttons[2].setVisible(false);

			add.setVisible(false);
			delete.setVisible(false);
			save.setVisible(false);
		}
		pan.add(con);
		container.add(BorderLayout.CENTER, pan);


		sub=new SubFrame(this);
//		打开同时更新数据
		buttons[3].doClick();
		System.out.println("honme显示窗口");
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		if("admin".equals(mode)){
			//			调用客户端线程
			try {
				client=new Socket(InetAddress.getByName("127.0.0.1"),8888);
				MyClient cli=new MyClient(client,this);
				cli.run();
				System.out.println("honme调用client线程");
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}




    public void flush(HomePage hp) {
		hp.getModel().setRowCount(0);
        ArrayList<Person> list=new PersonDao().UpdateInfo("");
        String[][] arr=ListUtil.ConvertToArray(list);
		for(int i=0;i<arr.length;i++) {
			hp.getModel().addRow(arr[i]);
		}
	}

	public Socket getClient() {
		return client;
	}

	public JPanel getPan() {
		return pan;
	}

	public JTextField getTxt() {
		return txt;
	}

	public JTextArea  getTa() {
		return ta;
	}
	public SubFrame getSub() {
		return sub;
	}
	public CardLayout getCl() {
		return cl;
	}

	public JFrame getFrame() {
		return frame;
	}

	public DefaultTableModel getModel() {
		return model;
	}

	public JTable getTable() {
		return table;
	}

    /**处理表格的静态方法
     * list to table-将list中的内容写到table中
     * @param model
     * @param list
     */
    public static void writeToTable(DefaultTableModel model,ArrayList<Person> list){
        String[][]brr=ListUtil.ConvertToArray(list);
        model.setRowCount(0);
        for(int i=0;i<brr.length;i++) {
            model.addRow(brr[i]);
        }
    }
    /**处理表格的静态方法
     *  table to list-将table中的内容读取到list列表中
     * @param hp
     * @return
     * @throws NumberFormatException
     */
    public static ArrayList<Person> getTableContext(HomePage hp) throws NumberFormatException {
        ArrayList<Person> list = new ArrayList<Person>();
        Vector vector= hp.getModel().getDataVector();
        for(int i=0;i<vector.size();i++) {
            Person per=new Person();
            Vector v=(Vector) vector.get(i);
            per.setId(Integer.parseInt((String) v.get(0)));
            per.setName((String)v.get(1));
            per.setSex("男".equals((String)v.get(2))?1:0);
            per.setDepartment((String)v.get(3));
            per.setSalary(Integer.parseInt((String)v.get(4)));
            list.add(per);
        }
        return list;
    }
	public static void main(String[]args) {
//		HomePage mo2=new HomePage("游客模式");
		System.out.println("调用HomePage方法");
		HomePage mo2=new HomePage("admin");
	}
}
