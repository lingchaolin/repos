package com.aowin.service;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;
import java.util.concurrent.Callable;

import org.apache.ibatis.session.SqlSession;

import com.aowin.dao.EmpMapper;
import com.aowin.dao.TuserMapper;
import com.aowin.model.Person;
import com.aowin.util.DbUtil;
import com.aowin.util.DbUtil1;
import com.mysql.fabric.xmlrpc.base.Array;

import oracle.jdbc.OracleTypes;
import oracle.net.aso.l;

public class SqlService {
	SqlSession session=DbUtil.openSession();
	TuserMapper mapper=session.getMapper(TuserMapper.class);
	//mysql数据库  插入数据-返回id
	public void mysqlReturnId(Person person) {
		try {
			int n=mapper.insertUser(person);
			System.out.println("新增："+n+"条，id="+person.getId());
			session.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			DbUtil.close(session);
		}
	}
	//oracle数据库  查询账户信息
	public void oracleGetAccount(Map<String, Object> map) {
		try {
			ArrayList<Person> list=mapper.selectOraUser(map);
			System.out.println(Arrays.toString(list.toArray()));
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			DbUtil.close(session);
		}
	}
	//oracle数据库  插入数据-返回id
	public void oracleReturnId(Person person) {
		try {
			int n=mapper.insertOracleUser(person);
			System.out.println("新增："+n+"条，id="+person.getId());
			session.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			DbUtil.close(session);
		}
	}
	
	//oracle调用存储函数
		public void oracleUpdateId(Map<String, Object> map) {
			try {
				System.out.println("1");
				mapper.uptName(map);
				System.out.println("2");
				session.commit();
			} catch (Exception e) {
				e.printStackTrace();
			}finally {
				DbUtil.close(session);
			}
		}
	//EmpDao
	public void callableMethod() throws SQLException {
		Connection conn=DbUtil1.getConn();
		CallableStatement st=null;
		ResultSet rs=null;
		try {
			st=conn.prepareCall("{persondure(?,?)}");
			//2.in 类型参数赋值
			st.setInt(1, 132);
			st.setString(3, "");
			
			//3.out 类型注册jdbcType
			st.registerOutParameter(1, OracleTypes.NUMERIC);
			st.registerOutParameter(2, OracleTypes.VARCHAR);
			
			//4.执行
			st.execute();
			
			//5.获取输出参数
			System.out.println(st.getString(2));
			
			//获取游标类型变量 对应ResultSet
			rs = (ResultSet) st.getObject(2);
			while(rs.next()) {
				System.out.println(rs.getString(1));
				System.out.println(rs.getString(2));
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			DbUtil1.close(conn, st, rs);
		}
		
	}
}
