<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans.xsd"> 
							
	<!--1. 通知： 就是我们编写的希望Aop时执行的那个方法。我们通过Aop希望我们编写的方法在目标方法执行前执行，或者执行后执行。
		2. 切点：切点就是我们我们配置的满足我们条件的目标方法。比如我们规定：名字前面是select开头的才执行我们自定义的通知方法。
			那么这些select开头的方法就是切点。
		3. 连接点：连接点可以说是切点的全集。切点是连接点的子集。也可以理解为，连接点是我们没有定义那个select开头规则时，满足条件的全部的方法。
		4. 切面：切面是切点和通知的组合称谓，就是变相给组合起了个名字。   -->
	<!--声明实现类  -->					
	<bean id="infoserviceimpl" class="com.aowin.aop.InfoServiceImpl"></bean>
	<!--声明通知类  -->
	<bean id="infobeforeadvice" class="com.aowin.aop.advice.InfoBeforeAdvice"></bean>
	<!--代理工厂      1.设置通知类 (怎么通知)  2.设置通知对象  --> 
	
   <!--  <bean name = "myAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
       <property name="advice" ref="infoserviceimpl"></property>
       根据正则表达式指定切入点 
       <property name="pattern" value="insert"/>匹配对象是全限定性方法名（包含包名、类名、接口名的那种）
    </bean> -->
	
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean"> 
		<property name="interceptorNames">
			<list>
				<value>infobeforeadvice</value>
			</list>
		</property>
		<!--设置目标对象  -->
		<property name="target" ref="infoserviceimpl"></property>
		<!--设置接口  -->
		<property name="proxyInterfaces">
			<list>
				<value>com.aowin.aop.InfoService</value>
			</list>
		</property>
	</bean>
	<bean id="aroundAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice" ref="aroundAdvice" />
		<property name="patterns">
			<list>
				<value>.*\.getInfo.*</value>
			</list>
		</property>
	</bean>


	
	
	
	
	
</beans>